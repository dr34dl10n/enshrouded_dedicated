#!/bin/bash
# Grab newest Connection logs since last check
# get User STEAM ID, convert to User Name
# and send telegram alert
#
### v0.4 - Added connected user list to get the info outside the script
### v0.3 - Added logged in and auth failed 
### v0.2 - Added method to get online username
### v0.1 - POC
#
## Crontab every minute :
# */1 * * * * /usr/local/sbin/enshrd_steamuser_check
#
# telegram-alert sample script can be found here :
# https://raw.githubusercontent.com/zephxs/ncat-ipset-honeypot/master/telegram-send

### VARS
_GAMEDIR="/home/enshrouded/enshroudedserver"                    # Enshrrouded game directory
_ENSHRD_LOGFILE="${_GAMEDIR}/logs/enshrouded_server.log"        # Enshrouded server log file
_WKGDIR="/home/enshrouded/enshrd-monitor"                       # Monitoring folder used by script set
_CONNECTED_USERS="${_WKGDIR}/connected-users"                   # List of Currently Connected Users
_LOCKFILE="/tmp/enshrd_chk.lock"
_LOG_FILE="${_WKGDIR}/user-connection.log"
# Disable Telegram-alert
_TELEGRAM_ALERT="false"                                         # 'telegram-send' script must be in PATH


### PRE
_LOGTHIS(){
local _LEVEL="$1"
local _MESSAGE="$2"
local _TIMESTAMP=$(date '+%Y-%m-%d %H:%M:%S')
printf "[${_TIMESTAMP}] [${_LEVEL}] ${_MESSAGE}\n" >>$_LOG_FILE
}

[ -d "$_WKGDIR" ] || mkdir -p ${_WKGDIR}
[ -f "$_ENSHRD_LOGFILE" ] || { _LOGTHIS FAIL "Enshrouded Server Logfile not found.."; exit 1; }
[ -f "${_WKGDIR}/last_check" ] || touch "${_WKGDIR}/last_check"

# Block script if already in run
if [ -e "$_LOCKFILE" ]; then
_PID=$(cat ${_LOCKFILE})
ps -p $_PID -o pid= >/dev/null 2>&1
  if [ $? -eq 0 ]; then
    _LOGTHIS FAIL "Process is already running.."
    exit
  fi
fi
echo $$ >$_LOCKFILE
trap 'rm -f "$_LOCKFILE"' EXIT

_EXITR(){
# copy current log for next compare and remove found connection events
cp -f "$_ENSHRD_LOGFILE" ${_WKGDIR}/last_check
>${_WKGDIR}/log_news 
rm -f "${_LOCKFILE}"
}

# Get new lines from current log file
_GET_LOGDIFF(){
diff ${_WKGDIR}/last_check $_ENSHRD_LOGFILE | grep "^>" >${_WKGDIR}/log_news
}

_EXTERNAL_ID(){
# Identify User who tries to login with online service
_STEAMSRC=$(grep -B4 ${_NEWHANDLER} ${_WKGDIR}/log_news  | awk -F"'" '/ authenticated by steam/ {print $(NF-1)}')
_STEAMUSER=$(curl -f -s https://steamid.io/lookup/$_STEAMSRC | grep -A1 ' <dt class="key">name</dt>' | awk -F'>|<' '/value/ {print $(NF-2)}')
[ -z "$_STEAMUSER" ] && _STEAMUSER="NotFound"
}

### MAIN
_GET_LOGDIFF
# exit if no new logs found
[ -s "${_WKGDIR}/log_news" ] || exit 0
# If New Client login detected parse new logs
if grep '\[online\] Client' ${_WKGDIR}/log_news | grep -q 'authenticated by steam'; then
  # Get New Player Handler or exit
  _NEWUSERIDS=($(awk '/Remote player added. Player handle/ {print $NF}' ${_WKGDIR}/log_news))
  [ -z "${_NEWUSERIDS[*]}" ] && _EXITR || _LOGTHIS INFO "New ID(s) detected = ${_NEWUSERIDS[@]}"
  # sleep 5 sec if the connection just occurs
  sleep 5 && _GET_LOGDIFF
  for _NEWHANDLER in "${_NEWUSERIDS[@]}"; do
    # If Auth fail
    if grep -A15 ${_NEWHANDLER} ${_WKGDIR}/log_news | grep -q "Remove player from session. Not found in online game info." ; then
      _EXTERNAL_ID  
      _LOGTHIS WARN "Failed connection attempt = $_STEAMUSER"
      [ "$_TELEGRAM_ALERT" = true ] && telegram-send -c alarm "DR34DShrouded Server
# FAILED User Auth = $_STEAMUSER"

    # else search username
    else
      _EXTERNAL_ID
      # log to file and send telegram alert
      _LOGTHIS INFO "User Connected = $_STEAMUSER $_NEWHANDLER"
      [ "$_TELEGRAM_ALERT" = true ] && telegram-send -c alarm "DR34DShrouded Server
# User Connected = $_STEAMUSER"
      grep -q "$_STEAMUSER" $_CONNECTED_USERS || echo "$_STEAMUSER" >>$_CONNECTED_USERS 
    fi
  done
fi

# if not try to find removed player
if grep -q 'Remove Entity for Player' ${_WKGDIR}/log_news; then
  _REMOVEDPLAYER=($(awk '/Remove Entity for Player/ {print $NF}' ${_WKGDIR}/log_news |tr -d "'"))
  for _REMOVEDUSER in ${_REMOVEDPLAYER[@]}; do
    _LOGTHIS INFO "User Logout = $_REMOVEDPLAYER"
  grep -q "$_REMOVEDUSER" $_CONNECTED_USERS && sed -i "/$_REMOVEDUSER/d" $_CONNECTED_USERS
  done
  [ "$_TELEGRAM_ALERT" = true ] && telegram-send -c alarm "DR34DShrouded Server
# User Logout = ${_REMOVEDPLAYER[@]}"
fi

### POST
_EXITR

